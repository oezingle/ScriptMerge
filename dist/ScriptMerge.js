// Variables used by Scriptable.
// These must be at the very top of the file. Do not edit.
// icon-color: blue; icon-glyph: magic;
;let SM_N6MP7TAT=(module,callback)=>{const scriptName=Script.name();const fName=module.filename.replace(/.*\//,'').replace(".js",'');if(scriptName===fName){if(callback){callback()}else{return true}};return false};;let SM_RYCNYXST_Test=class{constructor(fn,name,wantsError){const success=()=>{try{fn();if(wantsError)return false}catch(e){if(!wantsError){console.error(e);return false}};return true};return{name:name,success:success()}};static test(...args){return new SM_RYCNYXST_Test(...args)};static assertError(val1,val2,not){return new Error(`AssertError: ${val1} (expected ${not? "not " : ""}${val2})`)};static assert(val1,val2,name){return new SM_RYCNYXST_Test(()=>{if(val1!=val2){throw SM_RYCNYXST_Test.assertError(val1,val2)}},name)};static assertNot(val1,val2,name){return new SM_RYCNYXST_Test(()=>{if(val1==val2){throw SM_RYCNYXST_Test.assertError(val1,val2,true)}},name)};static assertNotNull(val,name){return SM_RYCNYXST_Test.assertNot(val,null,name)};static one(test){console[test.success?"log":"error"](`Test ${test.name ? test.name+" " : ""}${test.success ? "Passed" : "Failed"}`);return test.success};static all(...tests){let success=0;if(tests.length==0){console.log("No tests to run");return 100};tests.forEach((test,index)=>{if(!test.name)test.name=index+1;if(SM_RYCNYXST_Test.one(test))success++;});let p=Math.floor(100*success/tests.length);console.log('='.repeat(45));console[p===100?"log":"warn"](`${p}% Tests passed`);return p};static allDepend(...tests){if(SM_RYCNYXST_Test.all(...tests)!=100){throw Error("Not all tests passed")}}};let SM_RYCNYXST=SM_RYCNYXST_Test;;;let SM_8MJNQN0K_BracketBuffer=class{constructor(content,pos=0,debug=false){this.content=content;this.pos=pos;this.buff="";this.curr='';this.debug=debug};at(pos){return this.from(0,pos)};from(start,end){if(!start)start=0;if(!end)end=this.content.length-1;this.pos=start;while(this.pos<=end){this.move()};return this};charIsCancelled(){const BACKSLASH='\\';let backslashCount=0;let minusIndex=1;let prev;prev=this.content[this.pos-minusIndex];while(prev==BACKSLASH){backslashCount++;minusIndex++;prev=this.content[this.pos-minusIndex]};return backslashCount%2==1};move(){this.oobCheck();const brackets="{}[]()";const quotes="'\"`";const regex="/";this.curr=this.content[this.pos];const last=this.buff.substr(-1)||null;if(brackets.includes(this.curr)){if(quotes.includes(last)||regex.includes(last)){}else{this.buff+=this.curr}}else if(quotes.includes(this.curr)){if(!regex.includes(last)){if(quotes.includes(last)){if(last==this.curr){if(!this.charIsCancelled()){this.buff+=this.curr}}}else{this.buff+=this.curr}}}else if(regex.includes(this.curr)){let slashBeforeLineEnd=(()=>{let afterSlash=this.content.substr(this.pos);let newline=afterSlash.indexOf("\n");if(newline===-1)newline=Number.MAX_SAFE_INTEGER;let slash=afterSlash.indexOf("/");if(slash===-1)return false;return slash<newline})();let precedingIsAlphaNumeric=(()=>{let index=this.pos;let curr=this.content[index];while(index>0){index-=1;curr=this.content[index];if(!curr.match(/\s/)){return Boolean(curr.match(/[a-zA-Z0-9_$]/))}};return false})();if(!quotes.includes(last)){if(regex.includes(last)){if(last==this.curr){if(!this.charIsCancelled()){this.buff+=this.curr}}}else{if(slashBeforeLineEnd&&(!precedingIsAlphaNumeric)){this.buff+=this.curr}}}};const last2=this.buff.substr(-2);const pairs=["[]","{}","()"].concat(quotes.split('').concat(regex.split('')).map(char=>{return char.repeat(2)}));if(pairs.includes(last2)){this.buff=this.buff.substr(0,this.buff.length-2)};this.pos++;return this};moveUntilEmpty(){while(!this.isEmpty()){this.move()};return this};moveUntilLineEnd(){while(![";","\n"].includes(this.curr)){this.move()};return this};hasNext(){return this.pos<=this.content.length};oobCheck(){if(!this.hasNext()){if(this.debug){console.log("BBOOB: content ========");console.warn(this.content);console.log("BBOOB: buffer =========");console.warn(this.buff)};throw new Error("BracketBuffer Out of Bounds Error")}};isEmpty(){return this.buff.length===0};static from(content,start,end){return new this(content).from(start,end)};static at(content,pos){return this.from(content,0,pos)}};let SM_8MJNQN0K=SM_8MJNQN0K_BracketBuffer;;;let SM_4BKG8EIJ_ObjectiveCProxy=class{constructor(target,handler){this.target=target;this.handler=handler;this.patch()};_call(method,...args){return this.target[method](...args)};patch(){const prototype=this.target.constructor.prototype;const keys=Object.getOwnPropertyNames(prototype);for(let key of keys){if(!this[key]){const val=this.target[key];if(typeof val!="function")continue;if(this.handler.get){this[key]=(...args)=>{let fn=this.handler.get(this.target,key);if(fn==this.target[key]){return this._call(key,...args)}else{return fn(...args)}}}else{this[key]=(...args)=>{return this._call(key,...args)}}}}}};let SM_4BKG8EIJ=SM_4BKG8EIJ_ObjectiveCProxy;;;let SM_UF9582S5_StringRemover=class{constructor(content){this.content=content;this.strings=[];this.removeStrings()};getContent(){return this.content};setContent(content){this.content=content};prepend(newlet){this.setContent(newlet+this.getContent());this.removeStrings()};append(newlet){this.setContent(this.getContent()+newlet);this.removeStrings()};concat=this.append;removeStrings(){const brackets="{}()[]".split("");let bb=new BracketBuffer(this.content);let lastBuff="";let start=-1;let replacements=[];this.strings.forEach(string=>{replacements.push({slice:null,replacmeent:""})});while(bb.hasNext()){bb.move();if(lastBuff.length!=bb.buff.length){let lastBuffered=bb.buff.slice(-1);if(lastBuffered&&!brackets.includes(lastBuffered)){if(start===-1){start=bb.pos-1}}else if(lastBuff.length>bb.buff.length&&start!==-1&&!brackets.includes(bb.curr)){let slice=this.content.substring(start,bb.pos);let replacement=undefined;switch(slice[0]){case"/":{let pos=bb.pos;let flags="igsmyu".split("");while(flags.includes(this.content[pos])){pos++;};slice=this.content.substring(start,pos);replacement=`@StringRemover_Regex[${replacements.length}]`;break};case"`":{const formatVar=/\${([^}]*)}/g;let vars=[];slice.match(formatVar)?.forEach(m=>{vars.push(m.replace(formatVar,"$1"))});replacement="@StringRemover_Format["+replacements.length+"]"+" "+vars.join(" ")+""+"@StringRemover_End";break};default:{replacement=`@StringRemover_Simple[${replacements.length}]`;break}};if(replacement){replacements.push({slice,replacement})};start=-1}};lastBuff=bb.buff};replacements.forEach(({slice,replacement})=>{if(!slice||!replacement)return;this.content=this.content.replace(slice,replacement);this.strings.push(slice)})};reinsertStrings(){let newContent=this.content;const r=/@StringRemover_([a-zA-Z]+)\[(\d+)\]/g;for(let i=0;i<10;i++){let match;while((match=r.exec(newContent))!=null){switch(match[1]){case"Format":{const endS='@StringRemover_End';const end=newContent.indexOf(endS,match.index)+endS.length;const slice=newContent.substring(match.index,end);const index=Number(match[2]);newContent=newContent.replace(slice,()=>this.strings[index]);break};default:{const index=Number(match[2]);newContent=newContent.replace(match[0],()=>this.strings[index]);break}}}};return newContent}};let SM_UF9582S5=SM_UF9582S5_StringRemover;;;let SM_UDSWYI0G_ObjectiveCProxy=SM_4BKG8EIJ;;let SM_UDSWYI0G_AlertFactory=class extends SM_UDSWYI0G_ObjectiveCProxy{constructor(title="",message=""){const alert=new Alert();alert.title=title;alert.message=message;let index=0;let indices={};let handler={get:(obj,prop)=>{if(prop=="present"){return(fullscreen)=>{return obj.present(fullscreen).then(index=>{return indices[index](obj)})}}else if(prop.match(/add\S*Action/)){return(title,fn)=>{if(!fn)fn=()=>{};obj[prop](title);switch(prop){case"addCancelAction":{indices[-1]=fn;break};default:{indices[index++]=fn;break}};return this}};if(obj[prop]instanceof Function){return(...args)=>{obj[prop](...args);return this}}else{return obj[prop]}}};super(alert,handler)}};let SM_UDSWYI0G=SM_UDSWYI0G_AlertFactory;;;let SM_93T40WV8_extension=(path)=>{return path.substring(path.lastIndexOf('.')+1,path.length)||path};;let SM_93T40WV8=SM_93T40WV8_extension;;;let SM_BHZEC8XL_stacktraceError=(error)=>{let{stack}=error;stack=stack.split(/\s*@\s*/g);stack.splice(-2);stack=stack.map(fn=>{return fn?fn:"(Anonymous)"}).reverse();stack=stack.map(fn=>{return fn=="_stacktraced"?null:fn}).filter(Boolean);error.message+="\n"+"  In "+stack.join("\n  In ");throw error};let SM_BHZEC8XL_stacktrace=(fn)=>{let _stacktraced=(...args)=>{try{return fn(...args)}catch(e){SM_BHZEC8XL_stacktraceError(e)}};return _stacktraced};let SM_BHZEC8XL={stacktrace:SM_BHZEC8XL_stacktrace,SM_BHZEC8XL_stacktraceError};;;let SM_M59I3H2I_extension=SM_93T40WV8;;let SM_M59I3H2I_HardenedFS=class{constructor(iCloud){this.patch();this.instance=iCloud?FileManager.iCloud():FileManager.local()};_call(method,...args){return this.instance[method](...args)};_ignore=this._call;_errNotExists(method,filePath){if(!this.instance.fileExists(filePath)){throw new Error(`File ${filePath} does not exist`)};return this._call(method,filePath)};patch(){const notExistsProne=["readString","readImage","read"];const keys=Object.getOwnPropertyNames(FileManager.prototype);for(let key of keys){if(!this[key]){const val=FileManager.prototype[key];if(typeof val!="function")continue;if(notExistsProne.includes(key)){this[key]=(...args)=>{return this._errNotExists(key,...args)}}else{this[key]=(...args)=>{return this._call(key,...args)}}}}};static local(){return new SM_M59I3H2I_HardenedFS(false)};static iCloud(){return new SM_M59I3H2I_HardenedFS(true)};static extension=SM_M59I3H2I_extension;extension=SM_M59I3H2I_extension;static directory=(path)=>{return path.replace(/\/(?:.(?!\/))+$/m,'')};directory=SM_M59I3H2I_HardenedFS.directory;path(path){return path.replace('~',this.instance.documentsDirectory())}};let SM_M59I3H2I=SM_M59I3H2I_HardenedFS;;;let SM_ZVTO6I02_StringRemover=SM_UF9582S5;;let SM_ZVTO6I02_minify=script=>{script=script.replace(/\/\*([\s\S]*?)\*\//g,'').replace(/^\s*\/\/[^\n]*/gm,'').replace(/\s+\/\/[^\n]*/gm,'');let sr=new SM_ZVTO6I02_StringRemover(script);sr.setContent(sr.getContent().replace(/(if|for|while)\s*\((.*)\)\s*/g,'$1($2)').replace(/else\s*/g,'else ').replace(/(\+\+|--)\n+/gm,"$1;").replace(/(?![a-zA-Z0-9_$])(\/[^\/]*\/[igsmyu]*)\s+([a-zA-Z0-9_$])/g,'$1;$2').replace(/\s*([^a-zA-Z\s$0-9_])/g,'$1').replace(/([^a-zA-Z\s$0-9_])\s*([^a-zA-Z\s$0-9_])/g,'$1$2').replace(/([\[\{\(,\?\:])\s+/g,'$1').replace(/([\]\}\)0-9])\s*\n\s*/g,'$1;').replace(/\s*([\]\}\)])/g,"$1").replace(/([aA-zZ"'`])\s*\n\s*/g,'$1;').replace(/([^a-zA-Z\s])\s*/g,'$1'));script=sr.reinsertStrings();while(script[0]=='\n')script=script.substr(1);return script};let SM_ZVTO6I02=SM_ZVTO6I02_minify;;;let SM_T33C2ITT_escapeForRegex=(string)=>{return string.replace(/[.*+?^${}()|[\]\\]/g,'\\$&')};;let SM_T33C2ITT=SM_T33C2ITT_escapeForRegex;;;let SM_9FP3YL7D_uuidGen=(digits=8,base=36)=>{return Math.floor(Math.random()*base**digits).toString(base).padStart(digits,0).toUpperCase()};;let SM_9FP3YL7D=SM_9FP3YL7D_uuidGen;;;let SM_XDYUFJ6Z_symbolImage=name=>SFSymbol.named(name).image;;let SM_XDYUFJ6Z_AlertFactory=SM_UDSWYI0G;;let SM_XDYUFJ6Z_ConfigurationPresets={_default:{number:{set:(obj,prop)=>{const val=String(obj[prop]);return new SM_XDYUFJ6Z_AlertFactory(prop,"Set Numerical Value").addTextField("Input Value",val).addAction("Done",(alert)=>{obj[prop]=Number(alert.textFieldValue(0))}).addCancelAction("Cancel").present()}},boolean:{get:(obj,prop,row)=>{const val=obj[prop];const name=val?"checkmark.circle.fill":"circle";const cell=UITableCell.image(SM_XDYUFJ6Z_symbolImage(name));cell.rightAligned();row.addCell(cell);return row},set:(obj,prop)=>{obj[prop]=!obj[prop]}},string:{set:(obj,prop)=>{const val=String(obj[prop]);return new SM_XDYUFJ6Z_AlertFactory(prop,"Set String Value").addTextField("Input Value",val).addAction("Done",(alert)=>{obj[prop]=alert.textFieldValue(0)}).addCancelAction("Cancel").present()}},object:{get:(obj,prop,row)=>{const val=obj[prop];let preview=`{...}`;const cell=UITableCell.text(preview);cell.rightAligned();row.addCell(cell);return row},set:(obj,prop,handler)=>SM_XDYUFJ6Z_configureObject(obj[prop],handler[prop])},array:{},any:{get:(obj,prop,row)=>{const val=obj[prop];let preview=String(val);if(preview.length>32){preview="..."};const cell=UITableCell.text(preview);cell.rightAligned();row.addCell(cell);return row},set:()=>{}}},hidden:{get:()=>{}}};let SM_XDYUFJ6Z_getHandle=(val,handle)=>{let type=typeof val;if(type=="object"&&val instanceof Array)type="array";const getter=handle?.get??SM_XDYUFJ6Z_ConfigurationPresets._default[type]?.get??SM_XDYUFJ6Z_ConfigurationPresets._default.any.get;const setter=handle?.set??SM_XDYUFJ6Z_ConfigurationPresets._default[type]?.set??SM_XDYUFJ6Z_ConfigurationPresets._default.any.set;return{get:getter,set:setter}};let SM_XDYUFJ6Z_configureObject=(obj,handler={})=>{let keys=Object.getOwnPropertyNames(obj);const table=new UITable();table.showSeparators=true;const populateTable=()=>{table.removeAllRows();for(let key of keys){const val=obj[key];let handle=SM_XDYUFJ6Z_getHandle(val,handler[key]);let row=new UITableRow();row.addText(key,typeof val);row=handle.get(obj,key,row);if(row){row.dismissOnSelect=false;row.onSelect=async()=>{await handle.set(obj,key,handler);populateTable()};table.addRow(row)}};table.reload()};populateTable();return table.present()};let SM_XDYUFJ6Z={configureObject:SM_XDYUFJ6Z_configureObject,SM_XDYUFJ6Z_ConfigurationPresets};;const stacktrace=SM_BHZEC8XL.stacktrace;const HardenedFS=SM_M59I3H2I;const BracketBuffer=SM_8MJNQN0K;const StringRemover=SM_UF9582S5;const minify=SM_ZVTO6I02;const escapeForRegex=SM_T33C2ITT;const uuidGen=SM_9FP3YL7D;const AlertFactory=SM_UDSWYI0G;const{configureObject,ConfigurationPresets}=SM_XDYUFJ6Z;const fs=HardenedFS.iCloud();const buildPath=(path)=>{return path.replace(/\/[^\/]*\/\.\./g,'').replace(/^~/m,fs.documentsDirectory())};const ScriptMerge=class{static defaultSettings={debug:false,minify:false,plugins:[]};static fromFile(path,settings){const content=fs.readString(path);return new this(content,settings)};constructor(content,settings){this.content=content;this.settings={...this.constructor.defaultSettings,...settings};this.runtime={};if(this.settings.debug){console.log("[ScriptMerge] Debugger Enabled")};this.settings.plugins.forEach(plugin=>{this.addToToolChain(plugin.step,plugin.function);if(this.settings.debug)console.log(`[ScriptMerge] Added Plugin ${plugin.name ?? "(unknown)"}`)})};run_crawl(){this.runtime.spider=new Spider(this.content);if(this.settings.debug)console.log("[ScriptMerge] Spider Crawling Finished")};run_findSpider=(path)=>{const spider=this.runtime.spider;return spider.modules.find(elem=>elem.path==path)};run_popularity_contest(){const spider=this.runtime.spider;const popularity={};const popularityContest=(spider,depth=1)=>{if(spider.path){if(popularity[spider.path]){popularity[spider.path]+=depth}else{popularity[spider.path]=depth};if(popularity[spider.path]>25)return};spider.depends.forEach(depend=>{const dependSpider=this.run_findSpider(depend);if(dependSpider)popularityContest(dependSpider,depth+1)})};popularityContest(spider);let rankedPopularity=Object.entries(popularity).sort((a,b)=>b[1]-a[1]).map(n=>{if(this.settings.debug)console.log(`[ScriptMerge] ${n[0]} has popularity ${n[1]}`);return n[0]});this.runtime.rankedPopularity=rankedPopularity};run_merge_modules(){this.runtime.importModuleMap={};this.runtime.output="";this.runtime.rankedPopularity.forEach(path=>{const spider=this.run_findSpider(path);if(this.settings.debug){console.log(`[ScriptMerge] Merging Module: ${spider.path  
  .replace(fs.documentsDirectory(), '')}`)};const mod=new Module(spider.content,this.settings.debug);this.runtime.output+=";"+mod.exported;if(this.settings.debug)this.runtime.output+="\n\n";this.runtime.importModuleMap[mod.exportName]=spider.path})};run_replace_import_calls(){Object.entries(this.runtime.importModuleMap).forEach(([modname,path])=>{this.runtime.output=this.runtime.output.replaceAll(`importModule("${path}")`,modname)})};dependencyGraph(){const truncatePath=(spider)=>{return spider.path?.replace(spider.dir+"/","")??"[Parent Script]"};const getDepends=(spider,depth=0)=>{const pad="  ".repeat(depth);console.log(pad+truncatePath(spider));spider.depends.forEach(path=>{const sub=this.run_findSpider(path);getDepends(sub,depth+1)})};getDepends(this.runtime.spider)};run(){this.run_crawl();this.run_popularity_contest();this.run_merge_modules();let script=this.runtime.spider.content;while(script.substr(0,2)=="//"){script=script.substring(script.indexOf("\n"))};this.runtime.output+=script;this.run_replace_import_calls();if(this.settings.minify)this.runtime.output=minify(this.runtime.output);return this.runtime.output};static fromFile(path,settings){const content=fs.readString(path);return new this(content,settings)};static ToolChainSteps={READ_FILE:"readFile"};addToToolChain(step,func,name){if(!(step in this.constructor.ToolChainSteps)){throw new Error("Unknown Toolchain step")};this.settings.plugins.push({step,func,name})};static gui(path){const errHandle=err=>{console.error(err);throw err};const namedHandle=(name)=>{return err=>{console.error(`In ${name}: ${err}`);throw err}};const cancel=()=>{throw new Error("[ScriptKit] Cancelled")};let settings=this.defaultSettings;const runMenu=async(path)=>{const fileName=path.replace(fs.directory(path)+"/","");const alert=new AlertFactory("ScriptMerge - "+fileName).addAction("Run",()=>{return true}).addAction("Settings",()=>{return configureObject(settings,{plugins:ConfigurationPresets.hidden}).then(()=>runMenu(path),namedHandle("Settings Menu"))}).addCancelAction("Cancel",cancel);while(true){const ret=await alert.present();if(ret!=undefined){return{settings,path}}}};const setpath=async()=>{if(path){return path}else{return new AlertFactory("ScriptMerge","A path has not been set. How would you like to continue?").addAction("Select A File",()=>{return DocumentPicker.open(["com.netscape.javascript-source"]).then(paths=>paths[0])}).addAction("Provide a path",()=>{return new AlertFactory("ScriptMerge - Provide a Path","'~' can be used for the Scriptable Documents directory").addTextField("~/file.js").addAction("Confirm",alert=>{return buildPath(alert.textFieldValue(0))}).addCancelAction("Cancel",cancel).present()}).addAction("User Manual",()=>{return QuickLook.present(`
ScriptMerge User Manual

What? Why?
ScriptMerge was created to address the need for a way to "flatten" any importModule calls in Scriptable scripts. It's the third iteration of such a project that I've worked on, and the first I'm satisfied with.

Features
 - Per-module variable prefixing
 - Dependency-only variable collection
 - module and GUI endpoints
 - built-in minification


Installing

Pre-built
ScriptMerge can be used as a pre-merged flat file. See this project's releases

Building
ScriptMerge can build itself from the collection of modules it depends upon. Either select ScriptMerge.js through the GUI or build it using the module's ScriptMerge class


Usage

GUI
The gui can be called with 
ScriptMerge.gui([path])
Omitting the path prompts the user to select a file. Once a path has been set, the user can modify the settings object or merge the script. The user then decides what to do with the merged output

ScriptMerge class
Create a ScriptMerge instance using
new ScriptMerge(<content>, [settings])
or
ScriptMerge.fromFile(<path>, [settings])
to merge the file, use a ScriptMerge instance and call run()
            `).then(cancel)}).addCancelAction("Cancel",cancel).present()}};setpath().then(path=>{if(fs.fileExists(path)){return path}else{throw new Error("[ScriptMerge] Specified File Not Found")}},errHandle).then(runMenu,errHandle).then(({settings,path})=>{return this.fromFile(path,settings)},namedHandle("run menu")).then(inst=>{inst.run();return inst},namedHandle("Create Instance")).then(inst=>{const output=inst.runtime.output;new AlertFactory("ScriptKit - Success","How would you like to use your merged file?").addAction("Copy To Clipboard",()=>Pasteboard.copy(output)).addCancelAction("Cancel",cancel).present()},namedHandle("Run Instance")).catch(namedHandle("Output time"))};static Plugin=class{constructor(step,func,name){this.step=step;this.function=func;this.name=name}}};const ENABLE_IMPLICIT_DEFINITON=false;const Module=class{constructor(content,debug){this.debug=debug;content+='\n';this.content=";"+minify(content);this.uuid=uuidGen();this.exportName=`SM_${this.uuid}`;this.modify();this.getExports()};getExports(){this.exported="";const exports=this.getVar("module.exports");let nameMap={};if(exports){let sr=new StringRemover("");const depends=this.getDepends(exports);for(let key in depends){const val=depends[key];if(val){const name=`SM_${this.uuid}_${key}`;sr.prepend(`let ${name}=${val};`);nameMap[key]=name}};sr.append(`let ${this.exportName}=${exports};`);Object.entries(nameMap).forEach(([name,replacer])=>{let r=new RegExp(`([^a-zA-Z0-9_$.])${escapeForRegex(name)}(?![=:a-zA-Z0-9_$](?!=))`,'g');sr.setContent(sr.getContent().replace(r,"$1"+replacer))});this.exported=sr.reinsertStrings()}else{throw new Error("Module used unsupported export scheme")};return this.exported};modify(){this.content=this.content.replace(/function\s+(\S+)\s*\(([^\)]*)\)/g,"const $1 = ($2) =>").replace(/function\s*\(([^\)]*)\)/g,"($1) =>").replace(/class\s+(?!extends)(\S+)/g,"const $1 = class");const r=/(?:(?:let|const|var)\s*([a-zA-Z0-9_$])|module\.exports)\s*=\s*{/g;let match;while((match=r.exec(this.content))!=null){const start=match.index;try{const end=new     BracketBuffer(this.content,start).moveUntilLineEnd().moveUntilEmpty().pos;let slice=this.content.substring(start,end);slice=slice.substr(slice.indexOf("{"));const original=slice;slice=slice.replace(/([^:a-zA-Z])\s*([a-zA-Z]+)([,}])/g,'$1$2: $2$3');this.content=this.content.replace(original,slice)}catch(e){console.warn(e)}}};findDepends=this.constructor.findDepends;static findDepends(content){content=new StringRemover(content).getContent();const varNameTestGen=(valid)=>{return`[${valid?'':'^'}a-zA-Z$_]`+`[${valid?'':'^'}a-zA-Z0-9_$]*`};const validVarName=varNameTestGen(true);const invalidVarName=varNameTestGen(false);const invalidVarNameR=new RegExp(invalidVarName,'g');const dotAttr=new RegExp(`(${validVarName}|\.)\\s*\\.${validVarName}`,'g');while(content!=content.replace(dotAttr,'$1')){content=content.replace(dotAttr,'$1')};const jsKeywords=['if','else','for','while','try','catch','return','throw','new','of','class','constructor','true','false','static','continue','break','switch','static'].concat(Object.getOwnPropertyNames(globalThis)).concat(["null"]);jsKeywords.forEach(keyword=>{const keywordRegex=new RegExp(`([^a-zA-Z0-9_$])${escapeForRegex(keyword)}(?![a-zA-Z0-9_$])`,'g');content=content.replace(keywordRegex,'')});content=content.replace(/this\.\S+/g,"").replace(/this/g,"");content=content.replace(/[0-9]/g);const decl=new RegExp(`(?:const|let|var)\\s+(${validVarName})`);let match;while((match=decl.exec(content))!=null){const useOfVar=new RegExp(`${escapeForRegex(match[1])}(?![a-zA-Z0-9_])`,'g');content=content.replaceAll(match[0],'').replace(useOfVar,'')};const lambda=/\(([^\)]+)\)\s*=>/g;while((match=lambda.exec(content))!=null){const argumentz=match[1].replace(/\s+/g,'').split(',');argumentz.forEach(argument=>{const useOfVar=new RegExp(`${escapeForRegex(argument)}(?![a-zA-Z0-9_])`,'g');content=content.replace(useOfVar,'')})};content=content.replace(/(?:const|let|var)/g,"");content=content.replace(invalidVarNameR,' ').replace(/\s+/g,' ');const list=[...new Set(content.split(' '))].filter(Boolean);return list};getDepends(listOrContent){if(listOrContent instanceof Array){return this.getDependsFromList(listOrContent)}else if(typeof listOrContent=="string"){return this.getDependsFromContent(listOrContent)}};getDependsFromContent(content){let list=this.findDepends(content);return this.getDependsFromList(list)};getDependsFromList(dependencies,obj={}){dependencies.forEach(name=>{if(obj[name])return;const val=this.getVar(name);obj[name]=val?val:null;if(val){let subDepends=this.findDepends(val);this.getDependsFromList(subDepends,obj)}});return obj};getVar(name){const reName=escapeForRegex(name);const ePattern=new RegExp(`(const|let|var)\\s*${reName}\\s*=\\s*`,'g');const iPattern=new RegExp(`[\\s;]${reName}\\s*=\\s*`,'g');let match;let patterns=[ePattern,iPattern];for(const pattern of patterns){while((match=pattern.exec(this.content))!=null){let isGlobal=false;if(match[1]){isGlobal=BracketBuffer.at(this.content,match.index).isEmpty()}else{isGlobal=ENABLE_IMPLICIT_DEFINITON;if(name.includes("module.exports")){isGlobal=true}};if(isGlobal){const start=match.index+match[0].length;const end=new BracketBuffer(this.content,start).move().moveUntilLineEnd().moveUntilEmpty().pos;if(this.debug)console.log(`${name} gotten`);return this.content.substring(start,end)}}}}};const Spider=class{constructor(content,path,paths,modules){this.paths=paths;if(this.paths==null)this.paths=[];this.modules=modules;if(this.modules==null)this.modules=[];if(!path){this.dir=fs.documentsDirectory();this.path=undefined}else{this.path=path;this.dir=fs.directory(path)};this.content=content;this.minContent=minify(content);this.children=[];this.depends=[];this.aliases=['importModule'];this.getImportAliases();this.findImports()};static fromFile(path,paths,modules){if(fs.fileExists(path)){if(paths){if(paths.includes(path))return modules.find(elem=>elem.path==path);paths.push(path)};const content=minify(fs.readString(path));let temp=new this(content,path,paths,modules);if(modules)modules.push(temp);return temp}else{console.warn(`Spider: Unable to load ${path}`)}};findImports(){this.aliases.forEach(alias=>{let pattern=new RegExp(`${alias}\\(\\s*['"\`]([^'"\`]+)['"\`]\\s*\\)`,'g');const matches=this.minContent.match(pattern);if(!matches)return;for(let match of matches){let fileName=match.replace(pattern,'$1');if(fs.extension(fileName)==fileName){fileName+=".js"};fileName=`${this.dir}/${fileName}`;if(!fs.fileExists(fileName)){console.warn(`Spider: Unable to load ${fileName}`);continue};this.content=this.content.replace(match,`importModule("${fileName}")`);if(Spider.fromFile(fileName,this.paths,this.modules)){this.depends.push(fileName)}}})};getImportAliases(){const pattern=/(\S*)\s*=\s*importModule[^\(]/g;const matches=this.content.match(pattern);if(!matches)return;for(let match of matches){const name=match.replace(pattern,'$1');this.aliases.push(name)}}};SM_N6MP7TAT(module,()=>{ScriptMerge.gui()});module.exports=ScriptMerge